class Node:
    def __init__(self, value):
        self.value = value
        self.next = None

class Array_List:
    def __init__(self):
        self.head = None
        self.tail = None
        self.size = 0

    def get(self, index):
        if index < 0 or index >= self.size:
            raise IndexError("Index out of bounds")
        current = self.head
        for _ in range(index):
            current = current.next
        return current.value

    def set(self, index, value):
        if index < 0 or index >= self.size:
            raise IndexError("Index out of bounds")
        current = self.head
        for _ in range(index):
            current = current.next
        current.value = value

    def add(self, index, value):
        new_node = Node(value)
        if index == 0:
            new_node.next = self.head
            self.head = new_node
        else:
            previous = self.head
            for _ in range(index - 1):
                previous = previous.next
            new_node.next = previous.next
            previous.next = new_node
        if index == self.size:
            self.tail = new_node
        self.size += 1

    def remove(self, index):
        if index < 0 or index >= self.size:
            raise IndexError("Index out of bounds")
        if index == 0:
            self.head = self.head.next
        else:
            previous = self.head
            for _ in
 
range(index - 1):
                previous = previous.next
            previous.next = previous.next.next

        
if index == self.size - 1:
            self.tail = previous
        self.size -= 1

# Example usage
array = Array_List()
array.add(0, 10)
array.add(1, 20)
array.add(2, 30)

print(array.get(1))  # Output: 20
array.set(2, 40)
array.remove(1)

for i in range(array.size):
    print(array.get(i))  # Output: 10, 40
